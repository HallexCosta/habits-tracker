generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
  shadowDatabaseUrl      = env("PRISMA_SHADOW_DATABASE_URL")
}

model Habit {
  id         String          @id @default(uuid())
  title      String
  created_at DateTime
  user_id    String
  dayHabits  DayHabit[]
  weekDays   HabitWeekDays[]
  user       User            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("habits")
}

model Day {
  id        String     @id @default(uuid())
  date      DateTime   @unique
  dayHabits DayHabit[]
  dayUsers  DayUser[]

  @@map("days")
}

model DayHabit {
  id       String @id @default(uuid())
  day_id   String
  habit_id String
  habit    Habit  @relation(fields: [habit_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  day      Day    @relation(fields: [day_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([day_id, habit_id])
  @@map("day_habits")
}

model HabitWeekDays {
  id       String @id @default(uuid())
  habit_id String
  week_day Int
  habit    Habit  @relation(fields: [habit_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([habit_id, week_day])
  @@map("habit_week_days")
}

model DayUser {
  id      String @id @default(uuid())
  day_id  String
  user_id String
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  day     Day    @relation(fields: [day_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([user_id, day_id])
  @@map("day_users")
}

model UserDetails {
  firebase_uid String  @id
  provider     String?
  user_id      String  @unique
  user         User    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([user_id, firebase_uid])
  @@map("user_details")
}

model User {
  id           String        @id @default(uuid())
  name         String
  email        String
  password     String?
  photoURL     String?
  userDetails  UserDetails?
  dayUsers     DayUser[]
  userHabits   Habit[]
  userBrowsers UserBrowser[]

  @@unique([email])
  @@map("users")
}

model UserBrowser {
  id         String @id @default(uuid())
  browser_id String
  user_id    String
  user       User   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([user_id, browser_id])
  @@map("user_browsers")
}
